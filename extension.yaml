# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: firebase-timeseal-timestamp  # Identifier for your extension
version: 0.0.3  # Follow semver versioning
specVersion: v1beta  # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: TimeSeal

# Brief description of the task your extension performs (~1 sentence)
description: >-
  TimeSeal is a secure blockchain timestamping solution that ensures data integrity and transforms apps into blockchain applications.

icon: icon.png

license: Apache-2.0  # https://spdx.org/licenses/

# Public URL for the source code of your extension
sourceUrl: https://github.com/vaionex/timeseal-firebase

author:
  authorName: Vaionex
  email: one@vaionex.com
  url: https://www.vaionex.com/
contributors:
  - authorName: Saad Ahmad
    email: saad@vaionex.com
    url: https://saadahmad.xyz
  
  tags: [utilities]

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: false

externalServices:
  - name: TimeSeal
    pricingUri: https://www.timeseal.com/pricing

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: timestamp
    type: firebaseextensions.v1beta.function
    description: >-
      Monitors and timestamps changes in your collection
    properties:
      # LOCATION is a user-configured parameter value specified by the user during installation.
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:COLLECTION_PATH}/{id}
      runtime: "nodejs16"

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: COLLECTION_PATH
    label: Collection path
    description: >
      What is the path to the collection that will be audited?
    example: patients
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Must be a valid Cloud Firestore Collection
    required: true

  - param: API_KEY
    label: API Key
    description: >
      The TimeSeal API Key used to authenticate access to the TimeStamp service. The **API Key** value can be copied from the [TimeSeal Dashboard](https://www.timeseal.com/dashboard).
    type: secret
    required: true

  - param: STORAGE_METHOD
    label: TimeStamp Storage Method
    description: >-
      How dow you want to store your TimeStamps
    type: select
    options:
      - label: Fully OnChain
        value: onchain
      - label: Hashed
        value: hashed
      - label: Salted-Hashed
        value: salted-hashed
      - label: Encrypted
        value: encrypted

  - param: ENCRYPTION_KEY
    label: Salt/Encryption Key
    description: >
      Key used for encryption/salting depending on your storage method. (REQUIRED if you are using Salted-Hash or Encrypted method)
    example: my_encryption_key
    type: secret
    required: false

  - param: FIELDS_TO_AUDIT
    label: Fields to audit
    description: >
      Enter the fields that needs auditing. Please use comma to between the field names. If all the fields need to be audited then leave this parameter empty.
    example: first_name,last_name,email
    required: false

  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true
